- persisted = supporter["support_letter_id"].present? || supporter["supporter_id"].present?
li.js-add-example class="#{'read-only js-support-letter-received' if persisted}"
  input.js-support-entry-id type="hidden" name="form[#{question.key}][#{index}][support_letter_id]" value=supporter["support_letter_id"] *possible_read_only_ops(question.step.opts[:id])
  .js-system-tag data-new-hidden-input-name="form[#{question.key}][#{index}][support_letter_id]"

  .govuk-form-group
    label.govuk-label for="form[#{question.key}][#{index}][first_name]"
      ' First Name
    span.govuk-error-message

    input.js-support-letter-first-name.js-trigger-autosave.govuk-input autocomplete="off" class="js-trigger-autosave medium" name="form[#{question.key}][#{index}][first_name]" id="form[#{question.key}][#{index}][first_name]" type="text" value=supporter["first_name"] *possible_read_only_ops(question.step.opts[:id])
    p.govuk-body.visible-read-only = supporter["first_name"]


  .govuk-form-group
    label.govuk-label for="form[#{question.key}][#{index}][last_name]"
      ' Surname
    span.govuk-error-message

    input.js-support-letter-last-name.js-trigger-autosave.govuk-input autocomplete="off" class="js-trigger-autosave medium" name="form[#{question.key}][#{index}][last_name]" id="form[#{question.key}][#{index}][last_name]" type="text" value=supporter["last_name"] *possible_read_only_ops(question.step.opts[:id])
    p.govuk-body.visible-read-only = supporter["last_name"]


  .govuk-form-group
    label.govuk-label for="form[#{question.key}][#{index}][relationship_to_nominee]"
      ' Relationship to Nominee
    span.govuk-error-message

    input.js-support-letter-relationship-to-nominee.js-trigger-autosave.govuk-input autocomplete="off" class="js-trigger-autosave medium" name="form[#{question.key}][#{index}][relationship_to_nominee]" id="form[#{question.key}][#{index}][relationship_to_nominee]" type="text" value=supporter["relationship_to_nominee"] *possible_read_only_ops(question.step.opts[:id])
    p.govuk-body.visible-read-only = supporter["relationship_to_nominee"]
  .govuk-form-group
    label.govuk-label for="form[#{question.key}][#{index}][letter_of_support]"
      ' Letter of Support
    span.govuk-error-message

    input class="js-trigger-autosave js-support-letter-attachment govuk-input medium" name="form[#{question.key}][#{index}][letter_of_support]" id="form[#{question.key}][#{index}][letter_of_support]" type='file' *possible_read_only_ops(question.step.opts[:id])
    - if supporter['letter_of_support'].present?
      = render "support_letters/attachment", question: question,
                                              index: index,
                                              attachment_id: supporter['letter_of_support']

  p
    button.govuk-button.js-save-collection class=(persisted ? "visuallyhidden" : "") data-save-collection-url=users_form_answer_support_letters_url(@form_answer)
      | Submit letter of support

  - if !admin_in_read_only_mode? && persisted
    - if supporter["support_letter_id"].present? && @form_answer.support_letters.find_by_id(supporter["support_letter_id"])
      - url = users_form_answer_support_letter_path(form_answer_id: @form_answer.id, id: supporter["support_letter_id"])
    - else
      - url = "#"

    - if submission_deadline.trigger_at >= Time.zone.now
      button.govuk-button.govuk-button--warning.remove-supporter.remove-link.js-remove-link.visible-read-only class="#{'read_only' if admin_in_read_only_mode?}"
        | Remove

