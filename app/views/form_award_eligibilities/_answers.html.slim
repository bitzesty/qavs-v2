- eligibility.questions.each do |question|
  - answer = eligibility.public_send(question)
  - if question != step
    - if (final_eligibility_page?(step) && !@already_has_invalid_questions) || answer.present?
      tr.section
        td.previous-question-title
          = eligibility.class.label(question).html_safe
        td.previous-question-body
          - if eligibility.class.boolean_question?(question)
            - unless answer.nil?
              = eligibility.public_send("#{question}?") ? 'Yes' : 'No'
          - elsif eligibility.class.integer_question?(question)
            = answer
          - elsif !answer.nil?
            - if question == :are_majority_volunteers
              = eligibility_volunteer_majority_formatted_answer(answer)
            - else
              = eligibility.class.enumerized_attributes[question].find_value(answer).text

        - unless admin_in_read_only_mode?
          td.link-right
            = link_to wizard_path(question, form_id: @form_answer.id, skipped: eligibility.answer_valid?(question, answer)) do
              ' Change
              span.visuallyhidden
                = ' answer to' + eligibility.class.label(question)

      - if final_eligibility_page?(step) && !@already_has_invalid_questions && !eligibility.answer_valid?(question, answer)
        - @already_has_invalid_questions = true
        tr.previous-answer-invalid
          td colspan=3
            span
              ' This excludes the group from being nominated for the
              - if eligibility.is_a?(Eligibility::Basic)
                ' Queen's Award for Voluntary Service
              - else
                = eligibility.class.award_name
