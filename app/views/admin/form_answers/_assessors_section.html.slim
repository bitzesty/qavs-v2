/ TODO Assessors
/ probably can be handled by AJAX to keep the data consistent
/ and for example remove the assigned assessors from the selects
.well.section-applicant-users
  h2.govuk-heading-l
    ' Assessors
  ul.list-unstyled.list-actions
    li.govuk-form-group
      label
        span.assessor-label Lead:
      .form-value.lead-assessor
        = resource.lead_assessors
      .clear

    li.govuk-form-group.primary-assessor-assignment
      label
        ' Primary:
      .form-value class=("ellipsis edit-value" if policy(resource).assign_assessor?)
        - if resource.assessors.primary.present?
          = link_to "#", class: "ellipsis"
            = resource.assessors.primary.try(:full_name)
        - else
          span.p-empty Not assigned

      - if policy(resource).assign_assessor?
        = form_for [namespace_name, resource.assessor_assignments.primary],
                   remote: true,
                   html: { "data-type" => "json"},
                   authenticity_token: true do |form|

          .form-fields
            = form.select :assessor_id,
                          available_assessors_for_select,
                          { include_blank: true }

          = link_to "#", class: "form-edit-link govuk-link"
            span.glyphicon.glyphicon-pencil
            ' Edit
          .clear
          .govuk-button-group
            span.if-no-js-hide
              = link_to "Cancel", "#", class: "govuk-button govuk-button--secondary btn-default form-cancel-link"
            = form.submit "Save", class: "govuk-button btn-primary form-save-button"
          .errors-holder
      .clear

    li.govuk-form-group.secondary-assessor-assignment
      label
        span.assessor-label Secondary:
      .form-value class=("ellipsis edit-value" if policy(resource).assign_assessor?)
        - if resource.assessors.secondary.present?
          = link_to "#", class: "ellipsis"
            = resource.assessors.secondary.try(:full_name)
        - else
          span.p-empty Not assigned

      - if policy(resource).assign_assessor?
        = form_for [namespace_name, resource.assessor_assignments.secondary],
                   remote: true,
                   html: { "data-type" => "json" },
                   authenticity_token: true do |form|

          .form-fields
            = form.select :assessor_id, available_assessors_for_select, { include_blank: true }
          = link_to "#", class: "form-edit-link govuk-link"
            span.glyphicon.glyphicon-pencil
            ' Edit
          .clear
          .govuk-button-group
            span.if-no-js-hide
              = link_to "Cancel", "#", class: "govuk-button govuk-button--secondary btn-default form-cancel-link"
            = form.submit "Save", class: "govuk-button btn-primary form-save-button"
          .errors-holder
      .clear
