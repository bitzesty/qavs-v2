name: CI
on: [push]
jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      db:
        image: postgres:12-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_DB: qavs_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 15s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v3
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -yqq install postgresql postgresql-client libpq-dev xvfb unzip libcurl4 libcurl3-gnutls libcurl4-openssl-dev
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.231.0
        with:
          ruby-version: .ruby-version
          bundler: '2.4.8'
          bundler-cache: true
          cache-version: 1
      - name: Configure bundler
        run: |
          bundle config --local path vendor/bundle
          bundle config --local deployment true
          bundle config --local without 'development'
      - name: Install dependencies
        run: |
          bundle install --jobs 4 --retry 3
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - uses: nanasess/setup-chromedriver@v2
      - name: Install JavaScript dependencies
        run: yarn install
      - name: Setup database and run tests
        env:
          DISPLAY_SOCIAL_MOBILITY_AWARD: true
          DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/qavs_test'
          DOCKER_TLS_CERTDIR: ''
          RAILS_ENV: test
        run: |
          # Setup test database using standard Rails commands
          bundle exec rails db:create
          bundle exec rails db:migrate
          RAILS_DISABLE_TEST_LOG=true bundle exec rspec --format RSpec::Github::Formatter --format progress
