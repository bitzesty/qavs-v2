- state = FormAnswerStateTransition.new
- state.form_answer = resource
- state.subject = current_subject

.section-applicant-status
  .state-container
    .toggable-form aria-expanded="false" aria-live="polite"
      .toggable-form__read
        - if policy(state).view_dropdown? && state.collection.present?
          button.toggable-form__trigger.govuk-link
            | Edit
        p.govuk-body#eligibility-status
          strong
            | Eligibility status
          br
          - if resource.eligible?
            strong.govuk-tag.govuk-tag--green
              | ELIGIBLE
          - else
            strong.govuk-tag.govuk-tag--red
              | NOT ELIGIBLE
        
        p.govuk-body#local-assessment-status
          strong
            | Local assessment status
          br
          
          - if resource.state == 'recommended'
            strong.govuk-tag.govuk-tag--green
              | RECOMMENDED
          - elsif resource.state == 'not recommended'
            strong.govuk-tag.govuk-tag--red
              | NOT RECOMMENDED
          - elsif !resource.local_assessment_ended?
            strong.govuk-tag.govuk-tag--yellow 
              | IN PROGRESS
          - else
            strong.govuk-tag.govuk-tag--grey
              | NOT STARTED
        
        p.govuk-body#national-assessment-status
          strong
            | National assessment status
          br
          
          - if resource.state == 'recommended'
            strong.govuk-tag.govuk-tag--green
              | RECOMMENDED
          - elsif resource.state == 'not recommended'
            strong.govuk-tag.govuk-tag--red
              | NOT RECOMMENDED
          - elsif resource.state == 'undecided'
            strong.govuk-tag.govuk-tag--purple
              | UNDECIDED
          - else
            strong.govuk-tag.govuk-tag--grey
              | PENDING
      .toggable-form__edit tabindex="-1" aria-label="Change nomination status"
        .state-input
          = simple_form_for([namespace_name, resource, state],
                            html: { "data-type" => "html" },
                            remote: true,
                            authenticity_token: true) do |f|

            = f.input :state,
                      as: :select,
                      include_blank: false,
                      label: 'Status',
                      collection: state.collection
            = f.submit :update_state, class: 'govuk-button'
