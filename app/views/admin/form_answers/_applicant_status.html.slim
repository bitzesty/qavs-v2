- state = FormAnswerStateTransition.new
- state.form_answer = resource
- state.subject = current_subject

.section-applicant-status
  .state-container
    .toggable-form aria-expanded="false" aria-live="polite"
      .toggable-form__read
        - if policy(state).view_dropdown? && state.collection.present?
          button.toggable-form__trigger.govuk-link
            | Edit
        p.govuk-body#eligibility-status
          strong
            | Eligibility status
          br
          - if resource.eligible?
            = govuk_tag('eligible', 'green')
          - else
          = govuk_tag('not eligible', 'red')

        p.govuk-body#local-assessment-status
          strong
            | Local assessment status
          br

          - if resource.state == 'recommended'
            = govuk_tag('recommended', 'green')
          - elsif resource.state == 'not recommended'
            = govuk_tag('not recommended', 'red')
          - elsif !resource.local_assessment_ended?
            = govuk_tag('in progress', 'yellow')
          - else
            = govuk_tag('not started', 'grey')

        p.govuk-body#national-assessment-status
          strong
            | National assessment status
          br

          - if resource.state == 'recommended'
            = govuk_tag('recommended', 'green')
          - elsif resource.state == 'not recommended'
            = govuk_tag('not recommended', 'red')
          - elsif resource.state == 'undecided'
            = govuk_tag('undecided', 'purple')
          - else
            = govuk_tag('pending', 'grey')
      .toggable-form__edit tabindex="-1" aria-label="Change nomination status"
        .state-input
          = simple_form_for([namespace_name, resource, state],
                            html: { "data-type" => "html" },
                            remote: true,
                            authenticity_token: true) do |f|

            = f.input :state,
                      as: :select,
                      include_blank: false,
                      label: 'Status',
                      collection: state.collection
            = f.submit :update_state, class: 'govuk-button'
