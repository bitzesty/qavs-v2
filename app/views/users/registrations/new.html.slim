- provide(:page_wrapper_class, "page-devise")

.article-related-positioning-container
  .article-container.group
    article.group role="article"
      h1.govuk-heading-xl Create an account
      .application-notice.info-notice
        p.govuk-body
          = I18n.t(:custom_login_messages)[:already_have_account]
          =< link_to "sign in page", new_user_session_path
          '.
      = simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|

        #email-control-group
          = f.input :email, required: true, autofocus: false, label: 'Email', input_html: {autocomplete: "off", class: 'govuk-input--width-20'}, error: !signup_email_already_exists?(f.object)

          - if signup_email_already_exists?(f.object)
            .guidance-panel.account-notice
              .application-notice.help-notice
                .alert.alert-warning
                  p.text-underline
                    = I18n.t(:custom_login_messages)[:already_have_account_short]
                  p.text-normal
                    ' Please use
                    = link_to "sign in page", new_user_session_path
                    ' .
        #govuk-form-group
          = f.input :first_name,
                    input_html: { class: 'small' }

          = f.input :last_name,
                    input_html: { class: 'small' }

        #password-change-panel
          .form-inputs-group
            #password-control-group
              = f.input :password,
                        required: true,
                        label: 'Password',
                        hint: ("#{@minimum_password_length} characters minimum" if @validatable),
                        input_html: { class: "password-strength-meter js-disable-copy medium govuk-input--width-10", "data-min-password-length" => "10" }
              span#password-result-span.input-group-addon
                i#password-result.glyphicon.glyphicon-ok

            = render "shared/users/password_guidance"

            #password-confirmation-control-group
              = f.input :password_confirmation, required: true, label: 'Password confirmation', input_html: { class: "js-disable-copy medium govuk-input--width-10" }
              span#password-confirmation-result-span.input-group-addon
              i#password-confirmation-result.glyphicon.glyphicon-ok

            = render "shared/users/password_confirmation_guidance"

        = f.error :agreed_with_privacy_policy
        = f.input :agreed_with_privacy_policy, as: :boolean, label: "I have read and accepted the #{link_to 'privacy statement', privacy_path, target: '_blank'}".html_safe
        .form-actions
          = f.button :submit, "Create account", class: "govuk-button large"
